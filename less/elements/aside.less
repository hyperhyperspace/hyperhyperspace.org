aside {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: @margin;
  font-size: 75%;
  line-height: @line-height*.75;
  .clearfix();

  p, ul, ol {
    margin-bottom: 2rem;
  }

  li {
    margin-bottom: 0;
  }

  .headline-elements({
    margin-bottom: 2rem;
    &:first-child {
      margin-top: 0;
    }
  });

  .semantic-block-padding();
  // .make-asides-for(@semantic-colors);
  
  .on-tablet({
   
  });

  .on-desktop({
    float: right;
    margin-left: 0;
    margin-right: 0;
    width: @aside-width;
    // .clearfix();
  });
}

// figure {
//   width: @aside-width;
//   margin: 0 auto @margin auto;
//   font-size: @font-size*.75;
//   line-height: @line-height*.75;

//   .semantic-block-padding();
//   .make-asides-for(@semantic-colors);

//   .on-desktop({
//     float: right;
//     margin-top: @margin;
//     width: @aside-width;
//     .clearfix();
//   });
// }

// figure > img, figure > figcaption {
//   margin-bottom: 0;
// }

.make-asides-for(@colors) {
  // takes a list
  // makes classes for everything in the list
  // list must be variable names, not variables

  @length: length(@colors);

  .make-aside();

  .make-aside(@index:1) when (@index <= @length) {
    @color-name: extract(@colors, @index);
    @color: @@color-name;

    &.@{color-name} { .aside-color(@color);}

    .make-aside(@index + 1);
  } 
}

.aside-color(@color) {
  // .set-lumafix(@color; @base-color;);
  // .contrast-text-against(@lumafix);
  // background: @lumafix;

  .colorize(@color);
  //border: 1px solid @color;
}